# Generated by Django 3.1 on 2022-04-13 09:23

from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import src.custom_lib.functions.field_value_validation


class Migration(migrations.Migration):

    dependencies = [
        ('item', '0002_auto_20220215_1257'),
        ('core_app', '0002_auto_20220215_1257'),
        ('chalan', '__first__'),
        ('customer', '0003_customer_user'),
        ('customer_order', '0006_ordermaster_pick_verified'),
        ('log_app', '0018_logordermaster_pick_verified'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogChalanMaster',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('device_type', models.PositiveBigIntegerField(choices=[(1, 'Mobile'), (2, 'PC'), (3, 'Tablet'), (4, 'Other'), (5, 'NA')], default=5, help_text='where 1=Mobile, 2=PC, 3=Tablet and 4=Other')),
                ('app_type', models.PositiveBigIntegerField(choices=[(1, 'Web-App'), (2, 'IOS-App'), (3, 'Android-App'), (4, 'NA')], default=4, help_text='where 1=Web-App, 2=IOS-APP, 3=Android-APP')),
                ('chalan_no', models.CharField(db_index=True, help_text='Chalan No should be max. of 20 characters', max_length=20)),
                ('status', models.PositiveIntegerField(choices=[(1, 'CHALAN'), (2, 'BILLED'), (3, 'CANCELLED')], help_text='Where 1 = CHALAN, 2 = BILLED,  3 = CANCELLED, Default=1')),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount default=0.00', max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Total tax default=0.00', max_digits=12)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Sub total default=0.00', max_digits=12)),
                ('total_discountable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discountable amount', max_digits=12)),
                ('total_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total taxable amount', max_digits=12)),
                ('total_non_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total nontaxable amount', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand total default=0.00', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks should be max. of 100 characters', max_length=100)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer.customer')),
                ('discount_scheme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.discountscheme')),
                ('order_master', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.ordermaster')),
                ('ref_chalan_master', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chalan.chalanmaster')),
            ],
            options={
                'verbose_name': 'historical chalan master',
                'db_table': 'chalan_chalanmaster_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogChalanDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('device_type', models.PositiveBigIntegerField(choices=[(1, 'Mobile'), (2, 'PC'), (3, 'Tablet'), (4, 'Other'), (5, 'NA')], default=5, help_text='where 1=Mobile, 2=PC, 3=Tablet and 4=Other')),
                ('app_type', models.PositiveBigIntegerField(choices=[(1, 'Web-App'), (2, 'IOS-App'), (3, 'Android-App'), (4, 'NA')], default=4, help_text='where 1=Web-App, 2=IOS-APP, 3=Android-APP')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=12, validators=[src.custom_lib.functions.field_value_validation.gt_zero_validator])),
                ('sale_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='sale cost of order default=0.00', max_digits=12)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable default=True')),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is discountable default=True')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if item is taxable, default=0.00 max upto 100.00', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='default = 0.00 ', max_digits=12)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if item is discountable, default=0.00 and max upto 100.00', max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='default = 0.00 ', max_digits=12)),
                ('gross_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='default = 0.00 ', max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='default = 0.00 ', max_digits=12)),
                ('remarks', models.CharField(blank=True, max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('chalan_master', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chalan.chalanmaster')),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.item')),
                ('item_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemcategory')),
                ('order_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.orderdetail')),
                ('ref_chalan_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chalan.chalandetail')),
            ],
            options={
                'verbose_name': 'historical chalan detail',
                'db_table': 'chalan_chalandetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
